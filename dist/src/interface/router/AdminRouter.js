"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdminRouter = void 0;
const express_1 = require("express");
const AdminLogin_1 = require("../controller/Admin/AdminLogin");
const Display_Users_1 = require("../controller/Admin/Display-Users");
const AdminBlockUser_1 = require("../controller/Admin/AdminBlockUser");
const AdminUnblockUser_1 = require("../controller/Admin/AdminUnblockUser");
const AdminBlockMentor_1 = require("../controller/Admin/AdminBlockMentor");
const AminUnblockMentor_1 = require("../controller/Admin/AminUnblockMentor");
const Display_Mentors_1 = require("../controller/Admin/Display-Mentors");
const AdminAddbanner_1 = require("../controller/Admin/AdminAddbanner");
const AdminShowBanner_1 = require("../controller/Admin/AdminShowBanner");
const AdminHideBanner_1 = require("../controller/Admin/AdminHideBanner");
const VisibleBanner_1 = require("../controller/Admin/VisibleBanner");
const AdminCategory_1 = require("../controller/Admin/AdminCategory");
const AdminShowCategory_1 = require("../controller/Admin/AdminShowCategory");
const AdminBlockCategory_1 = require("../controller/Admin/AdminBlockCategory");
const AdminUnblockCategory_1 = require("../controller/Admin/AdminUnblockCategory");
const AdminAddSubCategory_1 = require("../controller/Admin/AdminAddSubCategory");
const AdminAuthVerification_1 = __importDefault(require("../middlewar/AdminAuthVerification"));
const AdminDisplayCourse_1 = require("../controller/Admin/AdminDisplayCourse");
const AdminCourseManagment_1 = require("../controller/Admin/AdminCourseManagment");
const AdminGetPauments_1 = require("../controller/Admin/AdminGetPauments");
exports.AdminRouter = (0, express_1.Router)();
exports.AdminRouter.get("/Admin", (req, res) => {
    console.log("working");
    return res.status(200).json({ status: "done" });
});
// post methods
exports.AdminRouter.post("/Login", AdminLogin_1.Adminlogin);
exports.AdminRouter.post("/getUsers", AdminAuthVerification_1.default, Display_Users_1.DisplayUsers);
exports.AdminRouter.post("/blockUser", AdminAuthVerification_1.default, AdminBlockUser_1.BlockUserReq);
exports.AdminRouter.post("/UnblockUser", AdminAuthVerification_1.default, AdminUnblockUser_1.UnBlockUserReq);
exports.AdminRouter.post("/getMentors", AdminAuthVerification_1.default, Display_Mentors_1.DisplayMentors);
exports.AdminRouter.post("/blockMentor", AdminAuthVerification_1.default, AdminBlockMentor_1.BlockMentorReq);
exports.AdminRouter.post("/UnblockMentor", AdminAuthVerification_1.default, AminUnblockMentor_1.UnBlockMentorReq);
exports.AdminRouter.post("/BannerUpload", AdminAuthVerification_1.default, AdminAddbanner_1.AdminCreateBanner);
exports.AdminRouter.post("/AdminShowBanner", AdminAuthVerification_1.default, AdminShowBanner_1.AdminShowBanner);
exports.AdminRouter.post("/AdminHideBanner", AdminAuthVerification_1.default, AdminHideBanner_1.AdminHideBanner);
exports.AdminRouter.post("/AdminVisibleBanner", AdminAuthVerification_1.default, VisibleBanner_1.AdminVisibleBanner);
exports.AdminRouter.post("/AdminCategory", AdminAuthVerification_1.default, AdminCategory_1.Addcategory);
exports.AdminRouter.post("/AdminDisplayCategory", AdminAuthVerification_1.default, AdminShowCategory_1.ShowCategory);
exports.AdminRouter.post("/AdminBlockCategory", AdminAuthVerification_1.default, AdminBlockCategory_1.AdminBlockCategory);
exports.AdminRouter.post("/AdminUnBlockCategory", AdminAuthVerification_1.default, AdminUnblockCategory_1.AdminUnBlockCategory);
exports.AdminRouter.post("/AdminAddSubcategory", AdminAuthVerification_1.default, AdminAddSubCategory_1.AdminAddSubcategory);
exports.AdminRouter.get("/AdminDisplayCourse", AdminAuthVerification_1.default, AdminDisplayCourse_1.AdminDisplayCourse);
exports.AdminRouter.post("/AdminCourseVisible", AdminAuthVerification_1.default, AdminCourseManagment_1.AdminBlaockCourse);
exports.AdminRouter.post("/AdminCourseInvisible", AdminAuthVerification_1.default, AdminCourseManagment_1.AdminUnblaockCourse);
exports.AdminRouter.get("/GetPayments", AdminAuthVerification_1.default, AdminGetPauments_1.AdminGetPauments);
